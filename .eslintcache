[{"/Users/chazadmin/code/projects/night-cage/src/index.tsx":"1","/Users/chazadmin/code/projects/night-cage/src/serviceWorker.ts":"2","/Users/chazadmin/code/projects/night-cage/src/app/store.ts":"3","/Users/chazadmin/code/projects/night-cage/src/App.tsx":"4","/Users/chazadmin/code/projects/night-cage/src/features/counter/counterSlice.ts":"5","/Users/chazadmin/code/projects/night-cage/src/features/counter/Counter.tsx":"6","/Users/chazadmin/code/projects/night-cage/src/shared/Header.tsx":"7","/Users/chazadmin/code/projects/night-cage/src/features/board/PlayHome.tsx":"8","/Users/chazadmin/code/projects/night-cage/src/features/board/ClassicBoard.tsx":"9","/Users/chazadmin/code/projects/night-cage/src/features/tiles/Tile.tsx":"10","/Users/chazadmin/code/projects/night-cage/src/theme/themes.ts":"11","/Users/chazadmin/code/projects/night-cage/src/shared/layout/Heading.tsx":"12","/Users/chazadmin/code/projects/night-cage/src/shared/layout/Link.tsx":"13","/Users/chazadmin/code/projects/night-cage/src/shared/layout/Anchor.tsx":"14","/Users/chazadmin/code/projects/night-cage/src/shared/layout/MenuBurger.tsx":"15","/Users/chazadmin/code/projects/night-cage/src/features/tiles/index.ts":"16","/Users/chazadmin/code/projects/night-cage/src/features/tiles/tileSlice.ts":"17","/Users/chazadmin/code/projects/night-cage/src/features/tiles/PassageT.tsx":"18","/Users/chazadmin/code/projects/night-cage/src/features/tiles/PassageStraight.tsx":"19","/Users/chazadmin/code/projects/night-cage/src/features/tiles/Bag.tsx":"20","/Users/chazadmin/code/projects/night-cage/src/features/tiles/Pit.tsx":"21","/Users/chazadmin/code/projects/night-cage/src/features/tiles/WaxEater.tsx":"22","/Users/chazadmin/code/projects/night-cage/src/features/tiles/StartTile.tsx":"23","/Users/chazadmin/code/projects/night-cage/src/features/tiles/Gate.tsx":"24","/Users/chazadmin/code/projects/night-cage/src/features/tiles/KeyTile.tsx":"25","/Users/chazadmin/code/projects/night-cage/src/features/tiles/PassageFourWay.tsx":"26","/Users/chazadmin/code/projects/night-cage/src/features/tiles/queue/Queue.tsx":"27"},{"size":648,"mtime":1608087893891,"results":"28","hashOfConfig":"29"},{"size":5424,"mtime":1608087893892,"results":"30","hashOfConfig":"29"},{"size":495,"mtime":1609007395656,"results":"31","hashOfConfig":"29"},{"size":1027,"mtime":1609003950953,"results":"32","hashOfConfig":"29"},{"size":1851,"mtime":1608087893890,"results":"33","hashOfConfig":"29"},{"size":1626,"mtime":1608087893890,"results":"34","hashOfConfig":"35"},{"size":1786,"mtime":1609003950958,"results":"36","hashOfConfig":"29"},{"size":553,"mtime":1609003950953,"results":"37","hashOfConfig":"29"},{"size":3042,"mtime":1609013398849,"results":"38","hashOfConfig":"29"},{"size":2308,"mtime":1609012722767,"results":"39","hashOfConfig":"29"},{"size":939,"mtime":1609003950960,"results":"40","hashOfConfig":"29"},{"size":1817,"mtime":1609003950959,"results":"41","hashOfConfig":"29"},{"size":1638,"mtime":1609003950959,"results":"42","hashOfConfig":"29"},{"size":1749,"mtime":1609003950959,"results":"43","hashOfConfig":"29"},{"size":658,"mtime":1609003950960,"results":"44","hashOfConfig":"29"},{"size":541,"mtime":1609003950956,"results":"45","hashOfConfig":"29"},{"size":5062,"mtime":1609023768575,"results":"46","hashOfConfig":"29"},{"size":717,"mtime":1609003950955,"results":"47","hashOfConfig":"29"},{"size":660,"mtime":1609003950955,"results":"48","hashOfConfig":"29"},{"size":1178,"mtime":1609003950953,"results":"49","hashOfConfig":"29"},{"size":820,"mtime":1609010633495,"results":"50","hashOfConfig":"29"},{"size":1336,"mtime":1609003950956,"results":"51","hashOfConfig":"29"},{"size":1346,"mtime":1609003950956,"results":"52","hashOfConfig":"29"},{"size":1401,"mtime":1609003950954,"results":"53","hashOfConfig":"29"},{"size":1410,"mtime":1609003950954,"results":"54","hashOfConfig":"29"},{"size":782,"mtime":1609003950955,"results":"55","hashOfConfig":"29"},{"size":1946,"mtime":1609022202603,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"hoive5",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1s3600s",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chazadmin/code/projects/night-cage/src/index.tsx",[],["115","116"],"/Users/chazadmin/code/projects/night-cage/src/serviceWorker.ts",[],"/Users/chazadmin/code/projects/night-cage/src/app/store.ts",[],"/Users/chazadmin/code/projects/night-cage/src/App.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/counter/counterSlice.ts",[],"/Users/chazadmin/code/projects/night-cage/src/features/counter/Counter.tsx",[],["117","118"],"/Users/chazadmin/code/projects/night-cage/src/shared/Header.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/board/PlayHome.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/board/ClassicBoard.tsx",["119","120","121","122","123","124","125","126","127","128","129","130"],"import React, { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport styled from \"styled-components\";\nimport { selectTiles, setTile } from \"../tiles/tileSlice\";\n\nimport {\n  Tile,\n  Bag,\n  Gate,\n  KeyTile,\n  PassageFourWay,\n  PassageStraight,\n  PassageT,\n  Pit,\n  StartTile,\n  tileSlice,\n  WaxEater\n} from \"../tiles/\";\n\ntype Props = {\n  children?: React.ReactNode,\n  context?: any\n}\n\n// const initState: any = [\n//   Gate,\n//   KeyTile,\n//   PassageFourWay,\n//   PassageStraight,\n//   PassageT,\n//   StartTile,\n// ]\n\n// const options = []\n\nconst ClassicBoard: React.FC<Props> = (props) => {\n  const tiles = useSelector(selectTiles);\n  const dispatch = useDispatch();\n\n  // const randomGen = (evt: React.MouseEvent) => {\n  //   evt.preventDefault();\n\n  //   const num = Math.floor(Math.random() * 36);\n  //   const\n\n  // }\n\n\n  return (\n    <Page>\n      <div>\n        <button onClick={() => dispatch(setTile({ key: 0, tileName: \"key\" }))}>Key</button>\n        <button onClick={() => dispatch(setTile({ key: 35, tileName: \"wax\" }))}>WaxEater</button>\n      </div>\n      <SixBySixCage>\n        {\n          Object.entries(tiles.tileMap).map(([k, v]) => {\n            return <Tile key={k} containing={v} />\n          })\n        }\n\n      </SixBySixCage>\n    </Page>\n\n  )\n}\n\n// const DryBoard: React.FC<Props> = (props) => {\n//   return (\n//     <SixBySixCage>\n//       {/* ROW 1 */}\n//       <Tile containing=\"gate\" />\n//       <Tile containing=\"pit\" />\n//       <Tile />\n//       <Tile />\n//       <Tile />\n//       <Tile />\n//       {/* ROW 2 */}\n//       <Tile />\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       {/* ROW 3 */}\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       {/* ROW 4 */}\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       {/* ROW 5 */}\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       {/* ROW 6 */}\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//       <Tile></Tile>\n//     </SixBySixCage>\n//   )\n// }\n\n\nconst Page = styled.div`\n\tdisplay: flex;\n\tflex-flow: column nowrap;\n\tjustify-content: center;\n\talign-items: center;\n\t/* overflow-x: auto; */\n\toverflow: hidden;\n`;\n\nconst SixBySixCage = styled.div`\n\twidth: 96vw;\n\tmax-width: 900px;\n\tmax-height: 900px;\n\tjustify-content: center;\n\tdisplay: grid;\n  grid-template-columns: repeat(6, minmax(16%, 1fr));\n  grid-auto-rows: 1fr;\n\t&::before {\n          content: '';\n  width: 0;\n  padding-bottom: 100%;\n  grid-row: 1 / 1;\n  grid-column: 1 / 1;\n\t}\n\t& > *:first-child {\n    grid-row: 1 / 1;\n\t\tgrid-column: 1 / 1;\n\t}\n\tjustify-items: center;\n\talign-items: center;\n\tgap: 0;\n`;\n\nexport default ClassicBoard;","/Users/chazadmin/code/projects/night-cage/src/features/tiles/Tile.tsx",["131"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Bag,\n  Gate,\n  KeyTile,\n  PassageFourWay,\n  PassageStraight,\n  PassageT,\n  Pit,\n  StartTile,\n  WaxEater\n} from \"./\";\n\ntype Props = {\n  children?: React.ReactNode;\n  containing?: string;\n}\n\ntype SProps = {\n  rotation: number;\n}\n\n// const selectChild = (containing: string): React.ReactNode => {\n//   switch (containing) {\n//     case \"gate\": return Gate;\n//     case \"key\": return KeyTile;\n//     case \"four\": return PassageFourWay;\n//     case \"straight\": return PassageStraight;\n//     case \"t\": return PassageT;\n//     case \"pit\": return Pit;\n//     default: return StartTile;\n//   }\n// }\n\nconst ContainedTile: React.FC<Props> = ({ children, containing = \"empty\" }) => {\n  switch (containing) {\n    case \"empty\":\n      return (null);\n    case \"gate\":\n      return (<Gate />);\n    case \"key\":\n      return <KeyTile />\n    case \"four\":\n      return <PassageFourWay />\n    case \"straight\":\n      return <PassageStraight />\n    case \"t\":\n      return <PassageT />\n    case \"pit\":\n      return (<Pit />);\n    case \"start\":\n      return (<StartTile />);\n    case \"wax\":\n      return (<WaxEater />);\n    default:\n      return (null);\n  }\n}\n\nconst Tile: React.FC<Props> = ({ children, containing = \"empty\" }) => {\n  const [rotation, setRotation] = useState(0);\n  const rotate = () => {\n    setRotation(rotation + 90 >= 360 ? rotation - 270 : rotation + 90);\n  }\n\n  if (containing === \"empty\") {\n    return (<TileSlot />);\n  } else {\n    return (\n      <TileSlot>\n        <TileContainer onClick={rotate} rotation={rotation}>\n          <ContainedTile containing={containing} />\n        </TileContainer>\n      </TileSlot>\n    )\n  }\n}\n\nconst TileSlot = styled.div`\n\tdisplay: flex;\n\tflex-flow: row nowrap;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: ${({ theme }) => theme.pDarkest};\n\tborder: 1px solid white;\n\theight: 100%; \n\twidth: 100%;\n`;\n\nconst TileContainer = styled.div<SProps>`\n\theight: 100%;\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-flow: column nowrap;\n\tjustify-content: center;\n\talign-items: center;\n\toverflow: hidden;\n\tborder: 1px solid white;\n\tbackground: var(--pDarker);\n\ttransform: ${({ rotation }) => `rotate(${rotation}deg)`};\n\ttransition: transform 0.2s ease-in-out;\n`;\n\nexport default Tile;","/Users/chazadmin/code/projects/night-cage/src/theme/themes.ts",[],"/Users/chazadmin/code/projects/night-cage/src/shared/layout/Heading.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/shared/layout/Link.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/shared/layout/Anchor.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/shared/layout/MenuBurger.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/index.ts",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/tileSlice.ts",["132","133"],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/PassageT.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/PassageStraight.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/Bag.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/Pit.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/WaxEater.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/StartTile.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/Gate.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/KeyTile.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/PassageFourWay.tsx",[],"/Users/chazadmin/code/projects/night-cage/src/features/tiles/queue/Queue.tsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"144","line":1,"column":27,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"145","line":10,"column":3,"nodeType":"142","messageId":"143","endLine":10,"endColumn":6},{"ruleId":"140","severity":1,"message":"146","line":11,"column":3,"nodeType":"142","messageId":"143","endLine":11,"endColumn":7},{"ruleId":"140","severity":1,"message":"147","line":12,"column":3,"nodeType":"142","messageId":"143","endLine":12,"endColumn":10},{"ruleId":"140","severity":1,"message":"148","line":13,"column":3,"nodeType":"142","messageId":"143","endLine":13,"endColumn":17},{"ruleId":"140","severity":1,"message":"149","line":14,"column":3,"nodeType":"142","messageId":"143","endLine":14,"endColumn":18},{"ruleId":"140","severity":1,"message":"150","line":15,"column":3,"nodeType":"142","messageId":"143","endLine":15,"endColumn":11},{"ruleId":"140","severity":1,"message":"151","line":16,"column":3,"nodeType":"142","messageId":"143","endLine":16,"endColumn":6},{"ruleId":"140","severity":1,"message":"152","line":17,"column":3,"nodeType":"142","messageId":"143","endLine":17,"endColumn":12},{"ruleId":"140","severity":1,"message":"153","line":18,"column":3,"nodeType":"142","messageId":"143","endLine":18,"endColumn":12},{"ruleId":"140","severity":1,"message":"154","line":19,"column":3,"nodeType":"142","messageId":"143","endLine":19,"endColumn":11},{"ruleId":"140","severity":1,"message":"145","line":4,"column":3,"nodeType":"142","messageId":"143","endLine":4,"endColumn":6},{"ruleId":"140","severity":1,"message":"155","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":18},{"ruleId":"140","severity":1,"message":"156","line":133,"column":7,"nodeType":"142","messageId":"143","endLine":133,"endColumn":20},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Bag' is defined but never used.","'Gate' is defined but never used.","'KeyTile' is defined but never used.","'PassageFourWay' is defined but never used.","'PassageStraight' is defined but never used.","'PassageT' is defined but never used.","'Pit' is defined but never used.","'StartTile' is defined but never used.","'tileSlice' is defined but never used.","'WaxEater' is defined but never used.","'AppThunk' is defined but never used.","'StartTileData' is defined but never used.","no-global-assign","no-unsafe-negation"]